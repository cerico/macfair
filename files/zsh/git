getpr () {
         pr=$(gh pr list | grep `git branch --show-current` | awk -F' ' '{print $1}')
}

closepr () {
        getpr
        gh pr close $pr
}

viewpr () {
        getpr
        gh pr view $pr --web
}

cleanpr () {
        git rebase origin/main
        git reset origin/main
        git add .
        git commit
        git push -f
        gh pr create --fill
        echo "#wip: " >  ~/.gitmessage
}

wip () {
	echo "#wip: $1" > ~/.gitmessage
	git commit
}

fix () {
	echo "#fix: $1" > ~/.gitmessage
	git commit
}

minor () {
	echo "#feat: $1" > ~/.gitmessage
	git commit
}

major () {
	echo "#feat!: $1" > ~/.gitmessage
	git commit
}

ghpr () {
        if [[ $1 == 'patch' || $1 == 'fix' ]] ; then
          echo "#fix: "  > ~/.gitmessage
          cleanpr
        elif [[ $1 == 'minor' || $1 == 'feat' ]] ; then
          echo "#feat: "  > ~/.gitmessage
          cleanpr
        elif [[ $1 == 'major' || $1 == 'breaking' ]] ; then
          echo "#feat: "  > ~/.gitmessage
          cleanpr
        elif [[ `git cherry -v main | grep -v -e fix -e feat| wc -c` -eq 0 ]] ;  then
          git push
          gh pr create --fill
        else
          echo please squash the following commits before submitting PR
          git cherry -v main | grep -v -e fix -e feat
        fi
}
