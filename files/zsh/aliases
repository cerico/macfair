source ~/.zsh/git
source ~/.zsh/godaddy
source ~/.zsh/macfair
source ~/.zsh/tokens
source ~/.zsh/trialling
export MARKPATH=$HOME/.marks
alias sedi='sed -i "" -e'

aliases () {
  for i in `ls ~/.zsh |grep -v "\."`
    do
      echo ${i:u}
      echo -------------
      grep '() {$' ~/.zsh/$i | tr -cd '[:alnum:]\n' | sort
      echo ""
    done
}

alphnum () {
	tr -cd '[:alnum:]\n'
}

help() {
  if [[ $# -eq 0 ]] ; then
    node $HOME/.zsh/help.js
    return
  fi
  node $HOME/.zsh/help.js $1
}

upsearch () {
  slashes=${PWD//[^\/]/}
  directory="$PWD"
  for (( n=${#slashes}; n>0; --n ))
  do
    test -e "$directory/$1" && echo "$directory" && return "hello"
    directory="$directory/.."
  done
}

m () {
  mf=`upsearch Makefile`
  if [[ ${#mf} -gt 0 ]] ; then
    cd $mf
    make $1
  else
    echo No Makefile found. Nothing to do
  fi
}

cdrepo () {
	cd `upsearch .git`
}

todo () {
	if [ -f "TODO.md" ]
	then
		y=`date "+%d %B %Y"`
		sed -i "" -e "1s/.*/$y/" TODO.md
	else
		date "+%d %B %Y" > TODO.md
	fi
  vi TODO.md
}

isym () {
	if [[ -f $1 ]]
	then
		ln -s $1 $2
	else
		ln -s $2 $1
	fi
}

back() {
  cd -
}

install() {
  if [ -f "package-lock.json" ]
    then
    echo "installing via npm"
    npm i
  elif  [ -f "yarn.lock" ]
    then
    echo "installing via yarn"
    yarn
  else
    echo "no yarn or npm found"
  fi
}

cleanup(){
  find . -name "node_modules" -type d -prune -exec rm -rf '{}' +
}

discogs() {
  y=`echo $1 | awk -F'/' '{print $5}'`
  mkdir -p ~/Downloads/discogs/$y
  cd ~/Downloads/discogs/$y
  youtube-dl -xiwc $1
}

sourcez () {
  source ~/.zshrc
}

ds () {
  du -sm * | sort -n
}

jump () {
    cd -P "$MARKPATH/$1" 2>/dev/null || echo "No such mark: $1"
}

mark () {
    mkdir -p "$MARKPATH"; ln -s "$(pwd)" "$MARKPATH/$1"
}

unmark () {
    rm -if "$MARKPATH/$1"
}
marks () {
    ls -l "$MARKPATH" | tail -n +2 | sed 's/  / /g' | cut -d' ' -f9- | awk -F ' -> ' '{printf "%-10s -> %s\n", $1, $2}'
}

unmarkall () {
  for i in `marks  | awk -F" " '{print $2}'`
  do
  unmark $i
  done
}

_completemarks () {
  reply=($(ls $MARKPATH))
}

compctl -K _completemarks jump
compctl -K _completemarks unmark

mcd () {
  mkdir -p "$1"
  cd "$1"
}

start () {
  if [[ $# -eq 0 ]] ; then
    python3 -m http.server 9000
  else
    python3 -m http.server $1
  fi
}

awks () {
  echo awk -F\' \' \'{print \$2}\'
}

cpr () {
  echo -e "\033]50;SetProfile=$1\a"
}

vsc () {
  theme=~/.vscode/themes/$1.json
  if test -f "$theme"
  then
    mkdir -p .vscode
    cp $theme .vscode/settings.json
  fi
}

hist () {
  history | grep -i $1
}

geo () {
  curl -H 'User-Agent: keycdn-tools:https://google.com' 'https://tools.keycdn.com/geo.json?host='$1
}
city () {
  geo | jq -r '.data.geo.city'
}
region () {
  geo | jq -r '.data.geo.region_name'
}
isp () {
  geo | jq -r '.data.geo.isp'
}
